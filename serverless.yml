# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: whosinbot

provider:
  name: aws
  runtime: go1.x
  region: ap-southeast-1
  profile: col.w.harris
  environment:
    ROLLCALL_TABLE: ${self:service}-${opt:stage, self:provider.stage}-rollcall
    ROLLCALL_RESPONSE_TABLE: ${self:service}-${opt:stage, self:provider.stage}-rollcallresponse
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
        - dynamodb:BatchWriteItem
      Resource: arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${opt:stage, self:provider.stage}-*

# you can overwrite defaults here
#  stage: dev

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:
  telegram:
    handler: bin/telegram_lambda
    environment:
      TELEGRAM_BOT_TOKEN: ${env:TELEGRAM_BOT_TOKEN}
    events:
      - http:
          path: telegram/{token}
          method: post
          request:
            parameters:
              paths:
                token: true
  hangout:
    handler: bin/hangout_lambda
    events:
      - http:
          path: hangout
          method: post

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    RollCallTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chat_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: chat_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ROLLCALL_TABLE}
    RollCallResponseTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chat_id
            AttributeType: S
          -
            AttributeName: user_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: chat_id
            KeyType: HASH
          -
            AttributeName: user_id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ROLLCALL_RESPONSE_TABLE}
